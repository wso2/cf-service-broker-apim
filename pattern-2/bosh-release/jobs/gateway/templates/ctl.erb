#!/bin/bash
# ----------------------------------------------------------------------------
#
# Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# WSO2 Inc. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# ----------------------------------------------------------------------------

set -xv

script_dir=$(dirname $0)
job_dir=${script_dir}/..

run_dir=/var/vcap/sys/run/gateway
log_dir=/var/vcap/sys/log/gateway
pid_file=${run_dir}/pid

CA_CERT="<%= p("wso2apim.certs.value") %>"
ALIAS='custom'
TRUSTSTORE_PASSWORD='wso2carbon'

mkdir -p ${run_dir} ${log_dir}
chown -R vcap:vcap ${run_dir} ${log_dir}

mkdir -p /var/vcap/store/wso2apim/data
export WSO2_APIM_DATA_DIR=/var/vcap/store/wso2apim/data/wso2apim

export JDK_HOME=/var/vcap/packages/openjdk/
export WSO2_APIM_PKG_HOME=/var/vcap/packages/wso2apim/
export WSO2_APIM_SERVER_PACKAGE=/var/vcap/packages/wso2apim/

# set any environment variables for your software
export MIN_HEAP=<%= properties.gateway.memory.min_heap %>
export MAX_HEAP=<%= properties.gateway.memory.max_heap %>
export MAX_PERMGEN=<%= properties.gateway.memory.max_permgen %>
export JAVA_OPTS=" -Xmx${MAX_HEAP}m -Xms${MIN_HEAP}m -XX:MaxPermSize=${MAX_PERMGEN}m"

export DEBUG_LOG=${log_dir}/wso2apim.log

export NFS_EXPORT_SERVER_DIR=/mnt/nfs-export/gateway/repository/deployment/server
export NFS_EXPORT_TENANTS_DIR=/mnt/nfs-export/gateway/repository/tenants

export NFS_SHARE_SERVER_DIR=/mnt/nfs-share/gateway/repository/deployment/server
export NFS_SHARE_TENANTS_DIR=/mnt/nfs-share/gateway/repository/tenants

touch $DEBUG_LOG
chmod -R 755 /var/vcap/sys
chmod 777 $DEBUG_LOG

function log_debug() {
  echo `date` $1 >> $DEBUG_LOG
}

log_debug "Kicking off ctl script as `whoami` with $1"

dpkg -s nfs-common >/dev/null 2>&1
if [ $? -ne 0 ] ; then
  chmod 1777 /tmp
  apt-get update
  if [ $? -ne 0 ] ; then
    log_debug "apt-get update failed"
  fi
  log_debug "Installing NFS Client"
  apt-get install nfs-common=1:1.2.8-9ubuntu12 -y
  if [ $? -ne 0 ] ; then
    log_debug "Installing nfs-common failed"
  fi
fi

mkdir -p ${NFS_SHARE_SERVER_DIR}
log_debug "`ls -la ${NFS_SHARE_SERVER_DIR}`"

mkdir -p ${NFS_SHARE_TENANTS_DIR}
log_debug "`ls -la ${NFS_SHARE_TENANTS_DIR}`"

case $1 in

  start)
    # kill the previously running instance if any
    kill -9 `cat ${pid_file}`

    pushd ${JDK_HOME}
    archive=`ls OpenJDK*gz`
    tar -zxvf $archive
    export JAVA_HOME=`pwd`/jdk8u192-b12
    export JAVA_BINARY=${JAVA_HOME}/bin/java

    KEYTOOL=`pwd`/jdk8u192-b12/jre/bin/keytool

    log_debug "JAVA_HOME: ${JAVA_HOME}"
    log_debug "JAVA_BINARY: ${JAVA_BINARY}"

    pushd ${WSO2_APIM_PKG_HOME}
    archive=`ls wso2am*zip`
    unzip $archive
    cd wso2am*
    WSO2_APIM_HOME=`pwd`
    KEYSTORE_PATH=${WSO2_APIM_HOME}/repository/resources/security/client-truststore.jks

    # Here any config files your application needs:
    cp -Tr ${job_dir}/repository/ ${WSO2_APIM_HOME}/repository/

    # Here add any libraries your application needs:
    cp /var/vcap/packages/jdbcdrivers/* ${WSO2_APIM_HOME}/repository/components/lib/

    mkdir /tmp/gateway
    mv $WSO2_APIM_HOME/repository/deployment/server/synapse-configs/ /tmp/gateway/

    mkdir /tmp/wso2am-tenants
    mv $WSO2_APIM_HOME/repository/tenants/ /tmp/wso2am-tenants/

    mount -t nfs <%= link("nfs-server").instances[0].address %>:${NFS_EXPORT_SERVER_DIR} ${NFS_SHARE_SERVER_DIR}
    mount -t nfs <%= link("nfs-server").instances[0].address %>:${NFS_EXPORT_TENANTS_DIR} ${NFS_SHARE_TENANTS_DIR}

    if [ -z "$(ls -A ${NFS_SHARE_SERVER_DIR})" ]; then
      cp -r /tmp/gateway/* ${NFS_SHARE_SERVER_DIR}/
    fi

    if [ -z "$(ls -A ${NFS_SHARE_TENANTS_DIR})" ]; then
      cp -r /tmp/wso2am-tenants/tenants/* ${NFS_SHARE_TENANTS_DIR}/
    fi

    ln -s ${NFS_SHARE_SERVER_DIR}/synapse-configs $WSO2_APIM_HOME/repository/deployment/server
    ln -s ${NFS_SHARE_TENANTS_DIR}/ $WSO2_APIM_HOME/repository

    # Create symbolic link for logging
    ln -s $WSO2_APIM_HOME/repository/logs/ ${log_dir}

    #write the cert details to a file
    echo ${CA_CERT} >> tmp.cert

    ${KEYTOOL} -import -noprompt -trustcacerts -alias ${ALIAS} -file tmp.cert \
      -storetype JKS -keystore ${KEYSTORE_PATH} -storepass ${TRUSTSTORE_PASSWORD}

    rm tmp.cert

    $WSO2_APIM_HOME/bin/wso2server.sh start

    # Sleep for a little while so the server comes up
    sleep 20
    WSO2_APIM_PID=`ps -ef | grep java | grep -v grep | awk '{print $2}' `
    echo $WSO2_APIM_PID > ${pid_file}

    ;;

  stop)

    kill -9 `cat ${pid_file}`
    rm -f ${pid_file}
    sleep 10
    umount ${NFS_SHARE_SERVER_DIR}
    umount ${NFS_SHARE_TENANTS_DIR}

    ;;

  *)
    echo "Usage: ctl {start|stop}" ;;

esac
